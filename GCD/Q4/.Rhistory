source("Prob3.R")
?sort
names(gdpData)
?order
?sort
?order
source("Prob3.R")
source("Prob3.R")
matchedDataSort[13,]
head(matchedDataSort)
tail(matchedDataSort)
source("Prob3.R")
head(matchedDataSort)
head(matchedDataSort,n=30)
countryData$X
names(gdpData)
head(gdpData)
gdpData$Economy
names(countryData)
countryData$Income.group
countryData$Income.Group
source("Prob4.R")
names(mergedData)
source("Prob4.R")
?melt
library("reshape2")
source("Prob4.R")
source("Prob4.R")
?average
?avg
source("Prob4.R")
source("Prob4.R")
table(means)
means
?tapply
source("Prob4.R")
source("Prob4.R")
source("Prob4.R")
?tapply
source("Prob4.R")
source("Prob5.R")
head(mergedData)
quantile(mergedData$Ranking)
?quantile
qnt <- quantile(mergedData$Ranking)
names(qnt)
seq(1:47)
source("Prob5.R")
source("Prob5.R")
crosstab
source("Prob5.R")
highGDPData
highGDPData$Ranking
length(highGDPData$Ranking)
highGDPData$X
source("Prob5.R")
mergedData$Ranking
source("Prob5.R")
source("Prob5.R")
crosstab
crosstab[5]
crosstab[5,]
crosstab[5,] >0
crosstab[crosstab[5,] >0,]
temp <- crosstab[5,] >0
temp
length(temp)
quantile
?quantile
quantile(mergedData$Ranking,prob =c(0.2,0.4,0.6,0.8,1))
source(quantile)
source("Prob5.R")
quantile
quantile[1]
source("Prob5.R")
crossTab
crosstab
highGDPData$Income.Group
crosstab
crosstab[1]
crosstab[1,]
crosstab
crosstab[5,]
crosstab
crosstab[6,]
crosstab[5,]
crosstab[5,]>0
getwd()
setwd("../FinalProject/")
getwd()
?read
?read()
source("run_analysis.R")
source("run_analysis.R")
names(d)
source("run_analysis.R")
?read.table
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
View(traindf)
?join_all
length(ytrain[,1])
source("run_analysis.R")
names(Xtrain)
?read.table
source("run_analysis.R")
source("run_analysis.R")
names(Xtrain)
?cbind
names(Xtrain)
source("run_analysis.R")
names(Xtrain)
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
Xtest
source("run_analysis.R")
source("run_analysis.R")
View(Xtest)
View(Xtest)
View(Xtrain)
View(Xtrain)
View(Xtest)
?rbind
source("run_analysis.R")
View(Xtrain)
names(mergedData)
source("run_analysis.R")
name(meanCols
)
names(meanCOls)
names(meanCols)
name(meanCols)
meanCols
?grep
meanCols <- grep("mean\(\)",featureLabels,value=T)
meanCols <- grep("mean()",featureLabels,value=T,fixed=TRUE)
meanCols
meanCols <- grep("mean()",featureLabels,value=T)
meanCols
meanCols <- grep("mean()",featureLabels,value=T,fixed=TRUE)
meanCols
?append
?concat
?grep
meanCols <- grep("mean()|sub()",featureLabels,value=T,fixed=TRUE)
?grepl
meanCols <- grep("mean()|sub()",featureLabels,value=T,perl=TRUE)
source("run_analysis.R")
source("run_analysis.R")
meanCols <- grep("mean()|sub()",featureLabels,value=T,perl=TRUE)
meanCols
?grep
regex("mean()|std()",featureLabels)
regexec("mean()|std()",featureLabels)
match <- regexec("[mean()|sub()]",featureLabels)
match <- grep("[mean()|sub()]",featureLabels)
match
match <- grep("[mean\(\)|sub\(\)]",featureLabels)
match <- grep("mean\(\)|sub\(\)",featureLabels)
match <- grep("mean\\(\\)|sub\\(\\)",featureLabels)
match
match <- grep("mean\\(\\)|sub\\(\\)",featureLabels,value=T)
match
match <- grep("[mean\\(\\) sub\\(\\)]",featureLabels,value=T)
match <- grep("[mean\\(\\)||sub\\(\\)]",featureLabels,value=T)
match <- grep("mean\\(\\)||sub\\(\\)",featureLabels,value=T)
match <- grep("mean\\(\\)",featureLabels,value=T)
match <- grep("mean()",featureLabels,value=T)
match <- grep("(mean\\(\\))|(sub())",featureLabels,value=T)
match <- grep("(mean\\(\\))||(sub())",featureLabels,value=T)
match <- grep("(mean\\(\\))||(sub\\(\\))",featureLabels,value=T)
match <- grep("(mean\\(\\))|(sub\\(\\))",featureLabels,value=T)
match <- grep("mean\\(\\))|(sub\\(\\)",featureLabels,value=T)
source("run_analysis.R")
mergedData[,meanandstdCols]
mergedData[, names(mergedData) %in% meanandstdCols]
?subset
subset(mergedData,select=meanAndStdData)
subset(mergedData,select=meanandstdCols)
meanandstdCols
subset(mergedData,select = c("tBodyGyroMag-std()" ))
names(mergedData)
xfeatureLabels
featureLabels
View(Xtrain)
View(Xtrain)
?read.table
?sub
sub([:punct:],meanansstdCols)
sub("[:punct:]",meanansstdCols)
sub("[:punct:]",meanandsstdCols)
sub("[:punct:]",meanandstdCols)
sub("[:punct:]",".",meanandstdCols)
gsub("[:punct:]",".",meanandstdCols)
gsub([:punct:],".",meanandstdCols)
gsub([:punct:],".",meanandstdCols,perl=true)
meanandstdCols
gsub([:punct:],".",meanandstdCols,perl=TRUE)
gsub("[:punct:]",".",meanandstdCols,perl=TRUE)
gsub("[[:punct:]]",".",meanandstdCols,perl=TRUE)
source("run_analysis.R")
View(meanAndStdData)
View(Xtrain)
View(Xtrain)
?merge
?revalue
?mutate
source("run_analysis.R")
source("run_analysis.R")
View(activities)
View(mergedData)
?merge
merge(meanAndStdData,activities,by="activityid")
View(meanAndStdData)
merge(mergedData,activities,by="activityid")
View(mergedData)
View(mergedData)
label <- merge(mergedData,activities,by="activityid")
View(label)
names(label)
View(label)
subset(label,select=-activityid)
activityDescDf <- subset(label,select=-activityid)
View(activityDescDf)
names(activityDescDf)
source("run_analysis.R")
source("run_analysis.R")
View(activityDescDf)
names(activityDescDf)
summary(activityDescDf)
str(activityDescDf)
names(meanAndstdData)
names(meanandstdData)
names(meanAndStdData)
source("test.R")
?sub
source("test.R")
newnames
source("test.R")
newnames
source("test.R")
newnames
source("test.R")
newnames
source("test.R")
newnames
source("test.R")
newnames
source("test.R")
newnames
newnames <- gsub("(Jerk)","jerk_",newnames)
source("test.R")
newnames <- gsub("(Jerk)","jerk_",newnames)
newnames
newnames <- gsub("(Mag)","mag_",newnames)
newnames
source("test.R")
newnames
source("test.R")
?rename
source("test.R")
source("run_analysis.R")
source("run_analysis.R")
colnames(activityDescDf) <- descriptiveFeatures
names(activityDescDf)
source("run_analysis.R")
name(mergedData)
namea(mergedData)
names(mergedData)
meanandstdCols=c("subject","activityid",meanCols,stdCols)
source("run_analysis.R")
names(activityDescDf)
View(activityDescDf)
meanandstdCols
source("run_analysis.R")
names(activityDescDf)
View(activityDescDf)
namestemp <- names(activityDescDf)
namestemp
newnamestemp <- c(namestemp(2),namestemp(1),namestemp(3:68))
newnamestemp <- c(newnamestemp(2),newnamestemp(1),newnamestemp(3:68))
newnamestemp <- c(newnamestemp[2],newnamestemp[1],newnamestemp[3:68])
namestemp
newnamestemp <- c(namestemp[2],namestemp[1],namestemp[3:68])
newnamestemp
source("run_analysis.R")
names(activityDescDf)
View(activityDescDf)
activityDescDf <- activityDescDf[,c(2,1,3:68)]
View(activityDescDf)
source("run_analysis.R")
View(activityDescDf)
source("run_analysis.R")
View(activityDescDf)
View(activityDescDf)
meltedData <- melt(activityDescDf,id=c(subject,activity_name),
measure.vars = descriptiveFeatures[3:68])
meltedData <- melt(activityDescDf,id=c("subject","activity_name"),
measure.vars = descriptiveFeatures[3:68])
head(meltedData)
subjectMeans <- dcast(meltedData, subject ~ variable, mean)
subjectMeans
subjectAndActivityMeans <- dcast(meltedData, subject+activity_name ~ variable, mean)
View(subjectAndActivityMeans)
activityMeans <- dcast(meltedData, activity_name ~ variable, mean)
View(activityMeans)
View(activityMeans)
View(activityMeans)
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
head(harTidyData)
write.csv(harTidyData,file="HAR_MEAN_STD.csv",sep=",")
source("run_analysis.R")
?write.table
write.table(harTidyData,file="HAR_MEAN_STD.txt",sep="  ",row.names=FALSE)
write.table(harTidyData,file="HAR_MEAN_STD.txt",sep=" ",row.names=FALSE)
write.table(harTidyData,file="HAR_MEAN_STD.txt",sep=",",row.names=FALSE)
write.csv(harTidyData,file="HAR_MEAN_STD.csv",sep=",",row.names=FALSE)
?write.table
write.table(harTidyData,header=TRUE,file="HAR_MEAN_STD.txt",row.names=FALSE,sep="\t")
write.table(harTidyData,file="HAR_MEAN_STD.txt",row.names=FALSE,sep="\t")
source("run_analysis.R")
source("run_analysis.R")
?markdown
source("run_analysis.R")
source("run_analysis.R")
library("knitr")
install.packages("knitr")
library("knitr")
version
names(harTidyData)
source("run_analysis.R")
summary(harTidyData)
clear
str(harTidyData)
source("run_analysis.R")
?plyr
source("run_analysis.R")
source("run_analysis.R")
View(activityDescDf)
View(Xtrain)
View(mergedData)
View(meanAndStdData)
View(tempData)
source("run_analysis.R")
View(meanAndStdData)
source("run_analysis.R")
source("run_analysis.R")
View(harTidyData)
setwd("/Users/SatishDivakarla/Documents/GitProjects/Titanic")
getwd()
source("titanic_analysis.R")
source("titanic_analysis.R")
source("titanic_analysis.R")
table(train$Survived)
prop.table(table(train$Survived))
source("titanic_analysis.R")
write.csv(submit, file = "theyallperish.csv", row.names = FALSE)
#write.csv(submit, file = "theyallperish.csv", row.names = FALSE)
source("titanic_analysis.R")
source("titanic_analysis.R")
prop.table(table(train$Sex, train$Survived))
prop.table(table(train$Sex, train$Survived),1)
View(train)
table(train$Sex, train$Survived)
setwd("/Users/SatishDivakarla/Documents/rwd/GCD/Q4")
getwd()
splittedData[[123]]
source("Qn1.R")
source("Qn1.R")
?strsplit
source("Qn1.R")
source("Qn2.R")
source("Qn2.R")
source("Qn2.R")
source("Qn2.R")
head
head(gdpData)
?read.csv
source("Qn2.R")
source("Qn2.R")
head(gdpData)
source("Qn2.R")
head(gdpData)
gdpData
dollarsCol
?sub
?gsub
source("Qn2.R")
dollarsCol
?as.numeric
source("Qn2.R")
source("Qn2.R")
dollarsCol
?mean
source("Qn2.R")
print(mean(dollarsCol,na.rm=TRUE))
?as.decimal
?as.double
source("Qn2.R")
source("Qn2.R")
dollarsCol
source("Qn2.R")
print(mean(dollarsCol,na.rm=TRUE))
sapply
?sapply()
source("Qn2.R")
source("Qn2.R")
source("Qn2.R")
source("Qn2.R")
source("Qn2.R")
source("Qn2.R")
source("Qn2.R")
grep("^United",countryNames)
countryNames
source("Qn2.R")
grep("^United",countryNames)
countryNames
source("Qn2.R")
?grep
source("Qn2.R")
grep("^United",countryNames)
\1
\\2
\\1
$1
$2
unitedCountries <- grep("^United",countryNames)
unitedCountries
coutntryNames[[1]]
coutntryNames[1
]
countryNames[1]
countryNames[6]
countryNames[32]
source("Qn4.R")
source("Qn4.R")
View(mergedData)
names(countryData)
head(countryData)
View(countryData)
View(mergedData)
names(mergedData)
source("Qn4.R")
specialNotes
regexpr("^Fiscal year end: June",specialNotes,perl=TRUE)
regexpr("^Fiscal year end: June",specialNotes,perl=TRUE)
grepexpr("^Fiscal year end: June",specialNotes,perl=TRUE)
grep("^Fiscal year end: June",specialNotes,perl=TRUE)
grep(".*Fiscal year end: June",specialNotes,perl=TRUE)
source("Qn5.R")
install.packages("quantmod")
source("Qn5.R")
names(amzn)
names(sampleTimes)
?index
head(amzn)
View(amzn)
testDate <- amzn[1,1]
class(testDate)
testData
testDate
testDate <- amzn[1,0]
testDate
class(testDate)
weekdays(testDate)
testDate1 <- amzn[1,0]
class(testDate1)
?date
install.packages("lubridate")
ymd(testDate)
?ym
?ymd
library("lubridate")
ymd(testDate)
ymd(testDate1)
mdy(testDate1)
names(amzn)
amzn.rownames
dates<- row.names(amzn)
dates
View(amzn)
row.names(amzn)
amzn
sampleTimes
source("Qn5.R")
sampleTimes
testDate <- sampleTimes[1]
class(testDate)
months(testDate)
weekdays(testDate)
source("Qn5.R")
testDate <- sampleTimes[1]
year(testDate)
source("Qn5.R")
tables(weekdays)
table(weekdays)
table(years)
years
sampleTimes
grep("2012-",sampleTimes,perl=TRUE)
sampleTimes[grep("2012-",sampleTimes,perl=TRUE)]
source("Qn5.R")
table(weekDays)
length(twentyTwelveData)
source("Qn2.R")
countryNames[99]
countryNames[186]
